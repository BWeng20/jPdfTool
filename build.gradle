plugins {
    id 'java'
    id 'application'
    id 'edu.sc.seis.launch4j' version '4.0.0'
}

group = 'io.github.bweng20'
version = '1.0'

repositories {
    mavenCentral()
}

java {
    modularity.inferModulePath = true
}

dependencies {

    implementation "com.formdev:flatlaf:3.6.1"
    implementation "com.formdev:flatlaf-fonts-roboto:2.137"
    implementation "io.github.bweng20:jSVGIcon:1.6"

    implementation 'org.apache.pdfbox:pdfbox:3.0.2'
    implementation 'org.apache.pdfbox:fontbox:3.0.2'
    implementation 'commons-logging:commons-logging:1.2'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

javadoc.options.addStringOption('Xdoclint:none', '-quiet')
javadoc.options.addStringOption('stylesheetfile', 'doc/javadoc.css')

application {
    mainClass = 'com.bw.jPdfTool.Main'
}


tasks.register('cleanJreDir', Delete) {
    delete layout.buildDirectory.dir("jre").get()
}


tasks.register('jlink', Exec) {
    dependsOn cleanJreDir
    dependsOn build
    group = 'distribution'

    def imageDir = layout.buildDirectory.dir("jre").get()
    def modulePath = "${System.getProperty('java.home')}/jmods"

    commandLine 'jlink',
            '--module-path', modulePath,
            '--add-modules', 'java.desktop,java.base',
            '--output', imageDir,
            '--strip-debug',
            '--compress', '2',
            '--no-header-files',
            '--no-man-pages'
}

launch4j {
    mainClassName = 'com.bw.jPdfTool.Main'
    outputDir = layout.buildDirectory.dir("launch4j").get().asFile.absolutePath
    outfile = "jPdfTool.exe"
    bundledJrePath = 'jre'
    jreMinVersion = '11'
    jreMaxVersion = '21'
    headerType = 'gui'
    requires64Bit = true
    copyConfigurable = configurations.runtimeClasspath
}

tasks.register('distZipWithJre', Zip) {
    group = "distribution"
    dependsOn(jlink)
    dependsOn(createExe)
    from('build/launch4j')
    from('build/jre') {
        into 'jre'
    }
    from('build/libs') {
        include '*.jar'
        into 'lib'
    }
    archiveFileName = "jPdfTool-${project.version}-jre.zip"
    destinationDirectory = layout.buildDirectory.dir("distributions").get()
}